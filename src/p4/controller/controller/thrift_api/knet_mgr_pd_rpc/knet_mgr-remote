#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.14.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:package_prefix=controller.thrift_api.
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from knet_mgr_pd_rpc import knet_mgr
from knet_mgr_pd_rpc.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  knet_cpuif_res_t knet_cpuif_ndev_add(string cpuif_netdev_name)')
    print('  status_t knet_cpuif_ndev_delete(knet_cpuif_t knet_cpuif_id)')
    print('  knet_hostif_kndev_res_t knet_hostif_kndev_add(knet_cpuif_t knet_cpuif_id, string hostif_name)')
    print('  status_t knet_hostif_kndev_delete(knet_cpuif_t knet_cpuif_id, knet_hostif_t knet_hostif_id)')
    print('  knet_filter_res_t knet_rx_filter_add(knet_cpuif_t knet_cpuif_id, knet_rx_filter_t rx_filter)')
    print('  status_t knet_rx_filter_delete(knet_cpuif_t knet_cpuif_id, knet_filter_t filter_id)')
    print('  knet_rx_filter_res_t knet_rx_filter_get(knet_cpuif_t knet_cpuif_id, knet_filter_t filter_id, knet_count_t rx_mutation_count)')
    print('  status_t knet_tx_action_add(knet_cpuif_t knet_cpuif_id, knet_hostif_t knet_hostif_id, knet_tx_action_t tx_action)')
    print('  status_t knet_tx_action_delete(knet_cpuif_t knet_cpuif_id, knet_hostif_t knet_hostif_id)')
    print('  knet_count_res_t knet_get_cpuif_cnt()')
    print('  knet_count_res_t knet_get_hostif_cnt(knet_cpuif_t knet_cpuif_id)')
    print('  knet_count_res_t knet_get_rx_filter_cnt(knet_cpuif_t knet_cpuif_id)')
    print('  knet_count_res_t knet_get_rx_mutation_cnt(knet_cpuif_t knet_cpuif_id, knet_filter_t filter_id)')
    print('  knet_count_res_t knet_get_tx_mutation_cnt(knet_cpuif_t knet_cpuif_id, knet_hostif_t hostif_id)')
    print('  knet_filter_list_res_t knet_rx_filter_list_get(knet_cpuif_t knet_cpuif_id, knet_count_t filter_count)')
    print('  knet_cpuif_list_res_t knet_cpuif_list_get(knet_count_t cpuif_count)')
    print('  knet_hostif_list_res_t knet_hostif_list_get(knet_cpuif_t knet_cpuif_id, knet_count_t hostif_count)')
    print('  knet_tx_action_res_t knet_tx_action_get(knet_cpuif_t knet_cpuif_id, knet_hostif_t knet_hostif_id, knet_count_t tx_mutation_count)')
    print('  bool knet_module_is_inited()')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = knet_mgr.Client(protocol)
transport.open()

if cmd == 'knet_cpuif_ndev_add':
    if len(args) != 1:
        print('knet_cpuif_ndev_add requires 1 args')
        sys.exit(1)
    pp.pprint(client.knet_cpuif_ndev_add(args[0],))

elif cmd == 'knet_cpuif_ndev_delete':
    if len(args) != 1:
        print('knet_cpuif_ndev_delete requires 1 args')
        sys.exit(1)
    pp.pprint(client.knet_cpuif_ndev_delete(eval(args[0]),))

elif cmd == 'knet_hostif_kndev_add':
    if len(args) != 2:
        print('knet_hostif_kndev_add requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_hostif_kndev_add(eval(args[0]), args[1],))

elif cmd == 'knet_hostif_kndev_delete':
    if len(args) != 2:
        print('knet_hostif_kndev_delete requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_hostif_kndev_delete(eval(args[0]), eval(args[1]),))

elif cmd == 'knet_rx_filter_add':
    if len(args) != 2:
        print('knet_rx_filter_add requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_rx_filter_add(eval(args[0]), eval(args[1]),))

elif cmd == 'knet_rx_filter_delete':
    if len(args) != 2:
        print('knet_rx_filter_delete requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_rx_filter_delete(eval(args[0]), eval(args[1]),))

elif cmd == 'knet_rx_filter_get':
    if len(args) != 3:
        print('knet_rx_filter_get requires 3 args')
        sys.exit(1)
    pp.pprint(client.knet_rx_filter_get(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'knet_tx_action_add':
    if len(args) != 3:
        print('knet_tx_action_add requires 3 args')
        sys.exit(1)
    pp.pprint(client.knet_tx_action_add(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'knet_tx_action_delete':
    if len(args) != 2:
        print('knet_tx_action_delete requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_tx_action_delete(eval(args[0]), eval(args[1]),))

elif cmd == 'knet_get_cpuif_cnt':
    if len(args) != 0:
        print('knet_get_cpuif_cnt requires 0 args')
        sys.exit(1)
    pp.pprint(client.knet_get_cpuif_cnt())

elif cmd == 'knet_get_hostif_cnt':
    if len(args) != 1:
        print('knet_get_hostif_cnt requires 1 args')
        sys.exit(1)
    pp.pprint(client.knet_get_hostif_cnt(eval(args[0]),))

elif cmd == 'knet_get_rx_filter_cnt':
    if len(args) != 1:
        print('knet_get_rx_filter_cnt requires 1 args')
        sys.exit(1)
    pp.pprint(client.knet_get_rx_filter_cnt(eval(args[0]),))

elif cmd == 'knet_get_rx_mutation_cnt':
    if len(args) != 2:
        print('knet_get_rx_mutation_cnt requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_get_rx_mutation_cnt(eval(args[0]), eval(args[1]),))

elif cmd == 'knet_get_tx_mutation_cnt':
    if len(args) != 2:
        print('knet_get_tx_mutation_cnt requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_get_tx_mutation_cnt(eval(args[0]), eval(args[1]),))

elif cmd == 'knet_rx_filter_list_get':
    if len(args) != 2:
        print('knet_rx_filter_list_get requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_rx_filter_list_get(eval(args[0]), eval(args[1]),))

elif cmd == 'knet_cpuif_list_get':
    if len(args) != 1:
        print('knet_cpuif_list_get requires 1 args')
        sys.exit(1)
    pp.pprint(client.knet_cpuif_list_get(eval(args[0]),))

elif cmd == 'knet_hostif_list_get':
    if len(args) != 2:
        print('knet_hostif_list_get requires 2 args')
        sys.exit(1)
    pp.pprint(client.knet_hostif_list_get(eval(args[0]), eval(args[1]),))

elif cmd == 'knet_tx_action_get':
    if len(args) != 3:
        print('knet_tx_action_get requires 3 args')
        sys.exit(1)
    pp.pprint(client.knet_tx_action_get(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'knet_module_is_inited':
    if len(args) != 0:
        print('knet_module_is_inited requires 0 args')
        sys.exit(1)
    pp.pprint(client.knet_module_is_inited())

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
